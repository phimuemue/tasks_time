import datetime
import re
import getpass

# version information
def create_version_info(*a,**b):
    f = open(r"info.cpp", "r")
    lines = f.readlines()
    f.close()
    f = open(r"info.cpp", "w")
    for i in xrange(len(lines)):
        if lines[i].startswith("char date"):
            dt = datetime.datetime.now().strftime("%Y/%m/%d %H:%M:%S")
            lines[i] = "char date[] = \"%s\";\n"%(dt)
        if lines[i].startswith("char build"):
            buildno = int(re.search("\"([0-9]*)\"", lines[i]).group(1))
            lines[i] = "char build[] = \"%s\";\n"%(str(buildno+1))
        if lines[i].startswith("char builtby"):
            builtby = getpass.getuser()
            lines[i] = "char builtby[] = \"%s\";\n"%(builtby)
    f.writelines(lines)
    f.close()


# variables
vars = Variables()
vars.Add(EnumVariable("OPT", 
            "Optimization level can be set to 0, 1, 2 or 3", "0", 
            allowed_values=("0", "1", "2", "3")))
vars.Add("NUM_THREADS", 
        "Number of threads. Possibly something between 1 and 20", "5")
vars.Add("NUM_PROCESSORS", "Number of processors.", "2")

# we use C++11 (mainly to simplify some writing in C++)
env = Environment(variables = vars,
                  CXXFLAGS=["-std=c++0x", "-Wall", "-fopenmp", 
                            "-O${OPT}", 
                            "-DNUM_THREADS=${NUM_THREADS}",
                            "-DNUM_PROCESSORS=${NUM_PROCESSORS}",
                            ], 
                  LINKFLAGS="-fopenmp",
                  build_dir = "build"
                 )

env.Append(NEW_VARIABLE = vars);

# help
Help(vars.GenerateHelpText(env))

# main program
mainprog = env.Program(target="tasks", source=Glob("*.cpp"))
env.AddPreAction(mainprog, create_version_info)
